(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{584:function(e,s,o){"use strict";o.r(s);var t=o(6),i=Object(t.a)({},(function(){var e=this,s=e.$createElement,o=e._self._c||s;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("我们知道 HTTP 是无状态的协议（对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息），服务端无法确认当前访问者的身份。所以为了让客户端与服务端拥有会话跟踪能力，就必须去维护一个状态，告知服务端当前请求的身份信息。这也就是我们常常需要的登录认证。")]),e._v(" "),o("p",[e._v("登录认证中有多种方案：cookie + session、token、JWT")]),e._v(" "),o("h2",{attrs:{id:"cookie-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-session"}},[e._v("#")]),e._v(" Cookie + Session")]),e._v(" "),o("p",[e._v("关于 cookie 的知识在浏览器存储已经介绍过了，cookie 是存储在客户端的，当 cookie 域名以及路径匹配便会在每个请求的请求头中携带该 cookie，如果是跨域请求默认不会携带，除非设置 withCredentials 为 true。")]),e._v(" "),o("p",[e._v("session 是存储服务端的，会将 sessionID 存储到客户端的 cookie 中。cookie 和 session 的登录认证流程如下：")]),e._v(" "),o("ol",[o("li",[e._v("用户发起登录请求认证到服务器，服务器根据用户提交的登录信息创建对应的 session")]),e._v(" "),o("li",[e._v("返回响应时将该 session 的唯一标识 sessionID 返回给浏览器，即设置响应头 Set-Cookie，指定某个字段的值为 sessionID，当然也可能会设置其他字段")]),e._v(" "),o("li",[e._v("浏览器收到响应后，会将信息存入 cookie，并设置域名")]),e._v(" "),o("li",[e._v("当用户发起下个请求时，会将该域名下的 cookie 携带上一并发送到服务器")]),e._v(" "),o("li",[e._v("根据 cookie 中保存的 sessionID 找到保存的 session 信息，没找到证明没登录或者登录失效，如果有就可以知道用户身份了")])]),e._v(" "),o("p",[e._v("cookie + session 登录认证方式的缺点在于 session 是存储在服务端的，当访问量过多时，会占用过多的服务器资源，而且 cookie 每个请求都会携带，在一些不需要登录的情况也会携带。")]),e._v(" "),o("h2",{attrs:{id:"token-认证"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#token-认证"}},[e._v("#")]),e._v(" Token 认证")]),e._v(" "),o("p",[e._v("一个简单 token 的组成：uid(用户唯一的身份标识)、time(当前时间的时间戳)、sign（签名，token 的前几位以哈希算法压缩成的一定长度的十六进制字符串）")]),e._v(" "),o("p",[e._v("token 的验证流程：")]),e._v(" "),o("ol",[o("li",[e._v("客户端发起登录到服务端，服务端验证用户名和密码")]),e._v(" "),o("li",[e._v("验证成功后，服务端签发一个 token 给客户端")]),e._v(" "),o("li",[e._v("客户端收到 token 后，可以自己选择存储在某个位置，比如 localStorage、sessionStorage")]),e._v(" "),o("li",[e._v("客户端每次需要登录信息去获取资源时就携带上这个 token")]),e._v(" "),o("li",[e._v("服务端收到后，验证 token，即"),o("strong",[e._v("查询数据库")]),e._v("去验证签名信息")])]),e._v(" "),o("p",[e._v("token 认证能规避上面 cookie 和 session 的缺点，token 的信息是存储在客户端的，服务端无状态化，服务端无需存储登录信息，而且 token 是我们想携带上就携带上的。")]),e._v(" "),o("h2",{attrs:{id:"jwt"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#jwt"}},[e._v("#")]),e._v(" JWT")]),e._v(" "),o("p",[e._v("JWT 是目前最流行的跨域认证解决方案，原理是服务器认证以后，生成一个 JSON 对象，发回给用户，但是为了安全，在生成这个对象时会加上签名。")]),e._v(" "),o("p",[e._v("JSON Web Token（简称 JWT） 由三段信息构成")]),e._v(" "),o("ul",[o("li",[e._v("头部 header：描述 JWT 的元数据，包括签名算法及 token 类型，最后会使用 Base64URL 算法转成字符串。")]),e._v(" "),o("li",[e._v("载荷 payload：存放有效信息，尽量不存放敏感信息，因为 payload 是可解析的，最后会使用 Base64URL 算法转成字符串。")]),e._v(" "),o("li",[e._v("签名 signature：是对前两部分的签名，目的是防止数据篡改。里面会指定一个 secret 密钥，使用 header 中的签名算法对 header + payload + secret 进行加密。")])]),e._v(" "),o("p",[e._v("最后生成的 JWT 大致长这样")]),e._v(" "),o("div",{staticClass:"language- line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiJBZG1pbiIsIkV4cGlyZSI6IjIwMjAtMDctMTEgMTY6NDc6MTYifQ.9ev6IGc1K3xvYaEfmMYeyFz5oHCM57fRGOvSZ-jvArw\n")])]),e._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[e._v("1")]),o("br")])]),o("p",[e._v("JWT 的认证过程与 token 认证十分相似：")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("客户端发起登录到服务端，服务端验证用户名和密码")])]),e._v(" "),o("li",[o("p",[e._v("验证成功后，服务端"),o("strong",[e._v("根据用户登录信息利用加密算法")]),e._v("生成一个 JWT 给客户端")])]),e._v(" "),o("li",[o("p",[e._v("客户端收到 JWT 后，可以自己选择存储在某个位置，比如 localStorage、sessionStorage")])]),e._v(" "),o("li",[o("p",[e._v("客户端每次需要登录信息去获取资源时就携带上这个 JWT，一般是放在 HTTP 头中的 Authorization 字段")]),e._v(" "),o("div",{staticClass:"language- line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("Authorization: Bearer <token>\n")])]),e._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[e._v("1")]),o("br")])])]),e._v(" "),o("li",[o("p",[e._v("服务端收到后，可利用密钥进行解密后验证信息是否被篡改，也可知晓用户身份")])])]),e._v(" "),o("h2",{attrs:{id:"token-与-jwt-区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#token-与-jwt-区别"}},[e._v("#")]),e._v(" Token 与 JWT 区别")]),e._v(" "),o("p",[e._v("Token：服务端验证客户端发送过来的 Token 时，还需要查询数据库获取用户信息，然后验证 Token 是否有效。")]),e._v(" "),o("p",[e._v("JWT：将 Token 和 Payload 加密后存储于客户端，服务端只需要使用密钥解密进行校验（校验也是 JWT 自己实现的）即可，不需要查询或者减少查询数据库，因为 JWT 自包含了用户信息和加密的数据。")])])}),[],!1,null,null,null);s.default=i.exports}}]);